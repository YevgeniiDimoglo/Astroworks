#version 450

struct Particle {
	vec2 position;
	vec2 velocity;
    vec4 color;
};

layout(set = 0, binding = 0) uniform UBOScene
{
    mat4 model;
    mat4 view;
    mat4 projection;
    mat4 lightMVP;
    vec4 lightDirection;
    vec4 lightColor;
    vec4 viewPos;
    vec4 timerConstants;
} uboScene;

layout(std140, binding = 1) readonly buffer ParticleSSBOIn {
   Particle particlesIn[ ];
};

layout(std140, binding = 2) buffer ParticleSSBOOut {
   Particle particlesOut[ ];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

const float scale = 1.0f;

void main() 
{
    uint index = gl_GlobalInvocationID.x;  

    Particle particleIn = particlesIn[index];

    vec3 pos = vec3(particleIn.position, 0.5f);

    pos.x += cos((uboScene.timerConstants.g + pos.z) * 0.25 * particleIn.velocity.y) * scale;
    pos.y = mod(pos.y - uboScene.timerConstants.g * particleIn.velocity.x, 1080.0);
    pos.z += sin((uboScene.timerConstants.g + pos.x) * 0.25 * particleIn.velocity.y) * scale;

    particlesOut[index].position = pos.xy;

}